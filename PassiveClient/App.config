<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <log4net>
    <!--
  This writes the log information to the console window.  It only logs events
  that are at least at the INFO level (which would mean that DEBUG events are not
  captured.
  -->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date{ABSOLUTE} [%thread] %level %logger - %message%newlineExtra Info: %property{testProperty}%newline%exception" />
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="DEBUG" />
        <levelMax value="FATAL" />
      </filter>
    </appender>
    <!--
  This stores information in the mylogfile.txt file.  It only captures log events
  that contain the key word test or error.
  -->
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Log\PassiveClient.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="25MB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %level %logger - %message%newline%exception" />
      </layout>
    </appender>
    <root>
      <level value="DEBUG" />
      <appender-ref ref="RollingFileAppender" />
      <appender-ref ref="ConsoleAppender" />
    </root>
    <logger name="Log4NetTest.OtherClass">
      <level value="DEBUG" />
      <appender-ref ref="ConsoleAppender" />
    </logger>
  </log4net>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
    </startup>
    <system.serviceModel>
        <bindings>
            <basicHttpBinding>
                <binding name="ActiveShell" />
                <binding name="PassiveShell" />
                <binding name="BasicHttpBinding_IPassiveShell" />
                <binding name="BasicHttpBinding_IAuthentication" />
            </basicHttpBinding>
            <netTcpBinding>
                <binding name="NetTcpBinding_IAletCallBack">
                    <security mode="None" />
                </binding>
            </netTcpBinding>
        </bindings>
        <client>
            <endpoint address="http://localhost:8000/ShellTrasferServer/ActiveShell"
                binding="basicHttpBinding" bindingConfiguration="ActiveShell"
                contract="ServiceReference1.IActiveShell" name="ActiveShell" />
            <endpoint address="http://localhost:8000/ShellTrasferServer/PassiveShell"
                binding="basicHttpBinding" bindingConfiguration="PassiveShell"
                contract="ServiceReference1.IPassiveShell" name="PassiveShell" />
            <endpoint address="http://localhost/ShellTrasferServer/PassiveShell/090914a3-fa13-4de3-8c00-462d6dd3b614"
                binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IPassiveShell"
                contract="PassiveShell.IPassiveShell" name="BasicHttpBinding_IPassiveShell" />
            <endpoint address="http://localhost/ShellTrasferServer/Authentication"
                binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IAuthentication"
                contract="Authentication.IAuthentication" name="BasicHttpBinding_IAuthentication" />
            <endpoint address="net.tcp://localhost/ShellTrasferServer/CallBack/090914a3-fa13-4de3-8c00-462d6dd3b614"
                binding="netTcpBinding" bindingConfiguration="NetTcpBinding_IAletCallBack"
                contract="AlertCallBack.IAletCallBack" name="NetTcpBinding_IAletCallBack" />
        </client>
    </system.serviceModel>
</configuration>