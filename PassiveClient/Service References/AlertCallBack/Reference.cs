//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlertCallBack {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AlertCallBack.IAletCallBack", CallbackContract=typeof(AlertCallBack.IAletCallBackCallback))]
    public interface IAletCallBack {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAletCallBack/RegisterCallBackFunction")]
        void RegisterCallBackFunction(string id, string type);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAletCallBack/RegisterCallBackFunction")]
        System.Threading.Tasks.Task RegisterCallBackFunctionAsync(string id, string type);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAletCallBack/KeepCallBackAlive")]
        void KeepCallBackAlive(string id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAletCallBack/KeepCallBackAlive")]
        System.Threading.Tasks.Task KeepCallBackAliveAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAletCallBackCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAletCallBack/CallBackFunction")]
        void CallBackFunction(string str);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAletCallBack/KeepCallbackALive")]
        void KeepCallbackALive();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAletCallBackChannel : AlertCallBack.IAletCallBack, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AletCallBackClient : System.ServiceModel.DuplexClientBase<AlertCallBack.IAletCallBack>, AlertCallBack.IAletCallBack {
        
        public AletCallBackClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AletCallBackClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AletCallBackClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AletCallBackClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AletCallBackClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegisterCallBackFunction(string id, string type) {
            base.Channel.RegisterCallBackFunction(id, type);
        }
        
        public System.Threading.Tasks.Task RegisterCallBackFunctionAsync(string id, string type) {
            return base.Channel.RegisterCallBackFunctionAsync(id, type);
        }
        
        public void KeepCallBackAlive(string id) {
            base.Channel.KeepCallBackAlive(id);
        }
        
        public System.Threading.Tasks.Task KeepCallBackAliveAsync(string id) {
            return base.Channel.KeepCallBackAliveAsync(id);
        }
    }
}
