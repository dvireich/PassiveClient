//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PassiveClientUi.Authentication {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Authentication.IAuthentication")]
    public interface IAuthentication {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AuthenticatePassiveClientAndSignIn", ReplyAction="http://tempuri.org/IAuthentication/AuthenticatePassiveClientAndSignInResponse")]
        PassiveClientUi.Authentication.AuthenticatePassiveClientAndSignInResponse AuthenticatePassiveClientAndSignIn(PassiveClientUi.Authentication.AuthenticatePassiveClientAndSignInRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AuthenticatePassiveClientAndSignIn", ReplyAction="http://tempuri.org/IAuthentication/AuthenticatePassiveClientAndSignInResponse")]
        System.Threading.Tasks.Task<PassiveClientUi.Authentication.AuthenticatePassiveClientAndSignInResponse> AuthenticatePassiveClientAndSignInAsync(PassiveClientUi.Authentication.AuthenticatePassiveClientAndSignInRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AuthenticateActiveClientAndSignIn", ReplyAction="http://tempuri.org/IAuthentication/AuthenticateActiveClientAndSignInResponse")]
        PassiveClientUi.Authentication.AuthenticateActiveClientAndSignInResponse AuthenticateActiveClientAndSignIn(PassiveClientUi.Authentication.AuthenticateActiveClientAndSignInRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/AuthenticateActiveClientAndSignIn", ReplyAction="http://tempuri.org/IAuthentication/AuthenticateActiveClientAndSignInResponse")]
        System.Threading.Tasks.Task<PassiveClientUi.Authentication.AuthenticateActiveClientAndSignInResponse> AuthenticateActiveClientAndSignInAsync(PassiveClientUi.Authentication.AuthenticateActiveClientAndSignInRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ActiveLogout", ReplyAction="http://tempuri.org/IAuthentication/ActiveLogoutResponse")]
        PassiveClientUi.Authentication.ActiveLogoutResponse ActiveLogout(PassiveClientUi.Authentication.ActiveLogoutRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ActiveLogout", ReplyAction="http://tempuri.org/IAuthentication/ActiveLogoutResponse")]
        System.Threading.Tasks.Task<PassiveClientUi.Authentication.ActiveLogoutResponse> ActiveLogoutAsync(PassiveClientUi.Authentication.ActiveLogoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/PassiveLogout", ReplyAction="http://tempuri.org/IAuthentication/PassiveLogoutResponse")]
        PassiveClientUi.Authentication.PassiveLogoutResponse PassiveLogout(PassiveClientUi.Authentication.PassiveLogoutRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/PassiveLogout", ReplyAction="http://tempuri.org/IAuthentication/PassiveLogoutResponse")]
        System.Threading.Tasks.Task<PassiveClientUi.Authentication.PassiveLogoutResponse> PassiveLogoutAsync(PassiveClientUi.Authentication.PassiveLogoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SignUp", ReplyAction="http://tempuri.org/IAuthentication/SignUpResponse")]
        PassiveClientUi.Authentication.SignUpResponse SignUp(PassiveClientUi.Authentication.SignUpRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SignUp", ReplyAction="http://tempuri.org/IAuthentication/SignUpResponse")]
        System.Threading.Tasks.Task<PassiveClientUi.Authentication.SignUpResponse> SignUpAsync(PassiveClientUi.Authentication.SignUpRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ChangeUserPassword", ReplyAction="http://tempuri.org/IAuthentication/ChangeUserPasswordResponse")]
        PassiveClientUi.Authentication.ChangeUserPasswordResponse ChangeUserPassword(PassiveClientUi.Authentication.ChangeUserPasswordRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/ChangeUserPassword", ReplyAction="http://tempuri.org/IAuthentication/ChangeUserPasswordResponse")]
        System.Threading.Tasks.Task<PassiveClientUi.Authentication.ChangeUserPasswordResponse> ChangeUserPasswordAsync(PassiveClientUi.Authentication.ChangeUserPasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SetSecurityQuestionAndAnswer", ReplyAction="http://tempuri.org/IAuthentication/SetSecurityQuestionAndAnswerResponse")]
        PassiveClientUi.Authentication.SetSecurityQuestionAndAnswerResponse SetSecurityQuestionAndAnswer(PassiveClientUi.Authentication.SetSecurityQuestionAndAnswerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/SetSecurityQuestionAndAnswer", ReplyAction="http://tempuri.org/IAuthentication/SetSecurityQuestionAndAnswerResponse")]
        System.Threading.Tasks.Task<PassiveClientUi.Authentication.SetSecurityQuestionAndAnswerResponse> SetSecurityQuestionAndAnswerAsync(PassiveClientUi.Authentication.SetSecurityQuestionAndAnswerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetSecurityQuestion", ReplyAction="http://tempuri.org/IAuthentication/GetSecurityQuestionResponse")]
        PassiveClientUi.Authentication.GetSecurityQuestionResponse GetSecurityQuestion(PassiveClientUi.Authentication.GetSecurityQuestionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/GetSecurityQuestion", ReplyAction="http://tempuri.org/IAuthentication/GetSecurityQuestionResponse")]
        System.Threading.Tasks.Task<PassiveClientUi.Authentication.GetSecurityQuestionResponse> GetSecurityQuestionAsync(PassiveClientUi.Authentication.GetSecurityQuestionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/RestorePasswordFromUserNameAndSecurityQuestion" +
            "", ReplyAction="http://tempuri.org/IAuthentication/RestorePasswordFromUserNameAndSecurityQuestion" +
            "Response")]
        PassiveClientUi.Authentication.RestorePasswordFromUserNameAndSecurityQuestionResponse RestorePasswordFromUserNameAndSecurityQuestion(PassiveClientUi.Authentication.RestorePasswordFromUserNameAndSecurityQuestionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/RestorePasswordFromUserNameAndSecurityQuestion" +
            "", ReplyAction="http://tempuri.org/IAuthentication/RestorePasswordFromUserNameAndSecurityQuestion" +
            "Response")]
        System.Threading.Tasks.Task<PassiveClientUi.Authentication.RestorePasswordFromUserNameAndSecurityQuestionResponse> RestorePasswordFromUserNameAndSecurityQuestionAsync(PassiveClientUi.Authentication.RestorePasswordFromUserNameAndSecurityQuestionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticatePassiveClientAndSignIn", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthenticatePassiveClientAndSignInRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        public AuthenticatePassiveClientAndSignInRequest() {
        }
        
        public AuthenticatePassiveClientAndSignInRequest(string userName, string password) {
            this.userName = userName;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticatePassiveClientAndSignInResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthenticatePassiveClientAndSignInResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AuthenticatePassiveClientAndSignInResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public AuthenticatePassiveClientAndSignInResponse() {
        }
        
        public AuthenticatePassiveClientAndSignInResponse(string AuthenticatePassiveClientAndSignInResult, string error) {
            this.AuthenticatePassiveClientAndSignInResult = AuthenticatePassiveClientAndSignInResult;
            this.error = error;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticateActiveClientAndSignIn", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthenticateActiveClientAndSignInRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        public AuthenticateActiveClientAndSignInRequest() {
        }
        
        public AuthenticateActiveClientAndSignInRequest(string userName, string password) {
            this.userName = userName;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticateActiveClientAndSignInResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthenticateActiveClientAndSignInResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AuthenticateActiveClientAndSignInResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public AuthenticateActiveClientAndSignInResponse() {
        }
        
        public AuthenticateActiveClientAndSignInResponse(string AuthenticateActiveClientAndSignInResult, string error) {
            this.AuthenticateActiveClientAndSignInResult = AuthenticateActiveClientAndSignInResult;
            this.error = error;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ActiveLogout", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ActiveLogoutRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string userType;
        
        public ActiveLogoutRequest() {
        }
        
        public ActiveLogoutRequest(string userName, string userType) {
            this.userName = userName;
            this.userType = userType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ActiveLogoutResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ActiveLogoutResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool ActiveLogoutResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public ActiveLogoutResponse() {
        }
        
        public ActiveLogoutResponse(bool ActiveLogoutResult, string error) {
            this.ActiveLogoutResult = ActiveLogoutResult;
            this.error = error;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PassiveLogout", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PassiveLogoutRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string userType;
        
        public PassiveLogoutRequest() {
        }
        
        public PassiveLogoutRequest(string userName, string userType) {
            this.userName = userName;
            this.userType = userType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PassiveLogoutResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PassiveLogoutResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool PassiveLogoutResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public PassiveLogoutResponse() {
        }
        
        public PassiveLogoutResponse(bool PassiveLogoutResult, string error) {
            this.PassiveLogoutResult = PassiveLogoutResult;
            this.error = error;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SignUp", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SignUpRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        public SignUpRequest() {
        }
        
        public SignUpRequest(string userName, string password) {
            this.userName = userName;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SignUpResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SignUpResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SignUpResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public SignUpResponse() {
        }
        
        public SignUpResponse(bool SignUpResult, string error) {
            this.SignUpResult = SignUpResult;
            this.error = error;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUserPassword", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ChangeUserPasswordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string oldPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string newPassword;
        
        public ChangeUserPasswordRequest() {
        }
        
        public ChangeUserPasswordRequest(string userName, string oldPassword, string newPassword) {
            this.userName = userName;
            this.oldPassword = oldPassword;
            this.newPassword = newPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUserPasswordResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ChangeUserPasswordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool ChangeUserPasswordResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public ChangeUserPasswordResponse() {
        }
        
        public ChangeUserPasswordResponse(bool ChangeUserPasswordResult, string error) {
            this.ChangeUserPasswordResult = ChangeUserPasswordResult;
            this.error = error;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSecurityQuestionAndAnswer", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetSecurityQuestionAndAnswerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string question;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string answer;
        
        public SetSecurityQuestionAndAnswerRequest() {
        }
        
        public SetSecurityQuestionAndAnswerRequest(string userName, string password, string question, string answer) {
            this.userName = userName;
            this.password = password;
            this.question = question;
            this.answer = answer;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSecurityQuestionAndAnswerResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetSecurityQuestionAndAnswerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SetSecurityQuestionAndAnswerResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public SetSecurityQuestionAndAnswerResponse() {
        }
        
        public SetSecurityQuestionAndAnswerResponse(bool SetSecurityQuestionAndAnswerResult, string error) {
            this.SetSecurityQuestionAndAnswerResult = SetSecurityQuestionAndAnswerResult;
            this.error = error;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSecurityQuestion", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSecurityQuestionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        public GetSecurityQuestionRequest() {
        }
        
        public GetSecurityQuestionRequest(string userName) {
            this.userName = userName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSecurityQuestionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSecurityQuestionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetSecurityQuestionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public GetSecurityQuestionResponse() {
        }
        
        public GetSecurityQuestionResponse(string GetSecurityQuestionResult, string error) {
            this.GetSecurityQuestionResult = GetSecurityQuestionResult;
            this.error = error;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RestorePasswordFromUserNameAndSecurityQuestion", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RestorePasswordFromUserNameAndSecurityQuestionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string answer;
        
        public RestorePasswordFromUserNameAndSecurityQuestionRequest() {
        }
        
        public RestorePasswordFromUserNameAndSecurityQuestionRequest(string userName, string answer) {
            this.userName = userName;
            this.answer = answer;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RestorePasswordFromUserNameAndSecurityQuestionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RestorePasswordFromUserNameAndSecurityQuestionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string RestorePasswordFromUserNameAndSecurityQuestionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public RestorePasswordFromUserNameAndSecurityQuestionResponse() {
        }
        
        public RestorePasswordFromUserNameAndSecurityQuestionResponse(string RestorePasswordFromUserNameAndSecurityQuestionResult, string error) {
            this.RestorePasswordFromUserNameAndSecurityQuestionResult = RestorePasswordFromUserNameAndSecurityQuestionResult;
            this.error = error;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationChannel : PassiveClientUi.Authentication.IAuthentication, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationClient : System.ServiceModel.ClientBase<PassiveClientUi.Authentication.IAuthentication>, PassiveClientUi.Authentication.IAuthentication {
        
        public AuthenticationClient() {
        }
        
        public AuthenticationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PassiveClientUi.Authentication.AuthenticatePassiveClientAndSignInResponse PassiveClientUi.Authentication.IAuthentication.AuthenticatePassiveClientAndSignIn(PassiveClientUi.Authentication.AuthenticatePassiveClientAndSignInRequest request) {
            return base.Channel.AuthenticatePassiveClientAndSignIn(request);
        }
        
        public string AuthenticatePassiveClientAndSignIn(string userName, string password, out string error) {
            PassiveClientUi.Authentication.AuthenticatePassiveClientAndSignInRequest inValue = new PassiveClientUi.Authentication.AuthenticatePassiveClientAndSignInRequest();
            inValue.userName = userName;
            inValue.password = password;
            PassiveClientUi.Authentication.AuthenticatePassiveClientAndSignInResponse retVal = ((PassiveClientUi.Authentication.IAuthentication)(this)).AuthenticatePassiveClientAndSignIn(inValue);
            error = retVal.error;
            return retVal.AuthenticatePassiveClientAndSignInResult;
        }
        
        public System.Threading.Tasks.Task<PassiveClientUi.Authentication.AuthenticatePassiveClientAndSignInResponse> AuthenticatePassiveClientAndSignInAsync(PassiveClientUi.Authentication.AuthenticatePassiveClientAndSignInRequest request) {
            return base.Channel.AuthenticatePassiveClientAndSignInAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PassiveClientUi.Authentication.AuthenticateActiveClientAndSignInResponse PassiveClientUi.Authentication.IAuthentication.AuthenticateActiveClientAndSignIn(PassiveClientUi.Authentication.AuthenticateActiveClientAndSignInRequest request) {
            return base.Channel.AuthenticateActiveClientAndSignIn(request);
        }
        
        public string AuthenticateActiveClientAndSignIn(string userName, string password, out string error) {
            PassiveClientUi.Authentication.AuthenticateActiveClientAndSignInRequest inValue = new PassiveClientUi.Authentication.AuthenticateActiveClientAndSignInRequest();
            inValue.userName = userName;
            inValue.password = password;
            PassiveClientUi.Authentication.AuthenticateActiveClientAndSignInResponse retVal = ((PassiveClientUi.Authentication.IAuthentication)(this)).AuthenticateActiveClientAndSignIn(inValue);
            error = retVal.error;
            return retVal.AuthenticateActiveClientAndSignInResult;
        }
        
        public System.Threading.Tasks.Task<PassiveClientUi.Authentication.AuthenticateActiveClientAndSignInResponse> AuthenticateActiveClientAndSignInAsync(PassiveClientUi.Authentication.AuthenticateActiveClientAndSignInRequest request) {
            return base.Channel.AuthenticateActiveClientAndSignInAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PassiveClientUi.Authentication.ActiveLogoutResponse PassiveClientUi.Authentication.IAuthentication.ActiveLogout(PassiveClientUi.Authentication.ActiveLogoutRequest request) {
            return base.Channel.ActiveLogout(request);
        }
        
        public bool ActiveLogout(string userName, string userType, out string error) {
            PassiveClientUi.Authentication.ActiveLogoutRequest inValue = new PassiveClientUi.Authentication.ActiveLogoutRequest();
            inValue.userName = userName;
            inValue.userType = userType;
            PassiveClientUi.Authentication.ActiveLogoutResponse retVal = ((PassiveClientUi.Authentication.IAuthentication)(this)).ActiveLogout(inValue);
            error = retVal.error;
            return retVal.ActiveLogoutResult;
        }
        
        public System.Threading.Tasks.Task<PassiveClientUi.Authentication.ActiveLogoutResponse> ActiveLogoutAsync(PassiveClientUi.Authentication.ActiveLogoutRequest request) {
            return base.Channel.ActiveLogoutAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PassiveClientUi.Authentication.PassiveLogoutResponse PassiveClientUi.Authentication.IAuthentication.PassiveLogout(PassiveClientUi.Authentication.PassiveLogoutRequest request) {
            return base.Channel.PassiveLogout(request);
        }
        
        public bool PassiveLogout(string userName, string userType, out string error) {
            PassiveClientUi.Authentication.PassiveLogoutRequest inValue = new PassiveClientUi.Authentication.PassiveLogoutRequest();
            inValue.userName = userName;
            inValue.userType = userType;
            PassiveClientUi.Authentication.PassiveLogoutResponse retVal = ((PassiveClientUi.Authentication.IAuthentication)(this)).PassiveLogout(inValue);
            error = retVal.error;
            return retVal.PassiveLogoutResult;
        }
        
        public System.Threading.Tasks.Task<PassiveClientUi.Authentication.PassiveLogoutResponse> PassiveLogoutAsync(PassiveClientUi.Authentication.PassiveLogoutRequest request) {
            return base.Channel.PassiveLogoutAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PassiveClientUi.Authentication.SignUpResponse PassiveClientUi.Authentication.IAuthentication.SignUp(PassiveClientUi.Authentication.SignUpRequest request) {
            return base.Channel.SignUp(request);
        }
        
        public bool SignUp(string userName, string password, out string error) {
            PassiveClientUi.Authentication.SignUpRequest inValue = new PassiveClientUi.Authentication.SignUpRequest();
            inValue.userName = userName;
            inValue.password = password;
            PassiveClientUi.Authentication.SignUpResponse retVal = ((PassiveClientUi.Authentication.IAuthentication)(this)).SignUp(inValue);
            error = retVal.error;
            return retVal.SignUpResult;
        }
        
        public System.Threading.Tasks.Task<PassiveClientUi.Authentication.SignUpResponse> SignUpAsync(PassiveClientUi.Authentication.SignUpRequest request) {
            return base.Channel.SignUpAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PassiveClientUi.Authentication.ChangeUserPasswordResponse PassiveClientUi.Authentication.IAuthentication.ChangeUserPassword(PassiveClientUi.Authentication.ChangeUserPasswordRequest request) {
            return base.Channel.ChangeUserPassword(request);
        }
        
        public bool ChangeUserPassword(string userName, string oldPassword, string newPassword, out string error) {
            PassiveClientUi.Authentication.ChangeUserPasswordRequest inValue = new PassiveClientUi.Authentication.ChangeUserPasswordRequest();
            inValue.userName = userName;
            inValue.oldPassword = oldPassword;
            inValue.newPassword = newPassword;
            PassiveClientUi.Authentication.ChangeUserPasswordResponse retVal = ((PassiveClientUi.Authentication.IAuthentication)(this)).ChangeUserPassword(inValue);
            error = retVal.error;
            return retVal.ChangeUserPasswordResult;
        }
        
        public System.Threading.Tasks.Task<PassiveClientUi.Authentication.ChangeUserPasswordResponse> ChangeUserPasswordAsync(PassiveClientUi.Authentication.ChangeUserPasswordRequest request) {
            return base.Channel.ChangeUserPasswordAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PassiveClientUi.Authentication.SetSecurityQuestionAndAnswerResponse PassiveClientUi.Authentication.IAuthentication.SetSecurityQuestionAndAnswer(PassiveClientUi.Authentication.SetSecurityQuestionAndAnswerRequest request) {
            return base.Channel.SetSecurityQuestionAndAnswer(request);
        }
        
        public bool SetSecurityQuestionAndAnswer(string userName, string password, string question, string answer, out string error) {
            PassiveClientUi.Authentication.SetSecurityQuestionAndAnswerRequest inValue = new PassiveClientUi.Authentication.SetSecurityQuestionAndAnswerRequest();
            inValue.userName = userName;
            inValue.password = password;
            inValue.question = question;
            inValue.answer = answer;
            PassiveClientUi.Authentication.SetSecurityQuestionAndAnswerResponse retVal = ((PassiveClientUi.Authentication.IAuthentication)(this)).SetSecurityQuestionAndAnswer(inValue);
            error = retVal.error;
            return retVal.SetSecurityQuestionAndAnswerResult;
        }
        
        public System.Threading.Tasks.Task<PassiveClientUi.Authentication.SetSecurityQuestionAndAnswerResponse> SetSecurityQuestionAndAnswerAsync(PassiveClientUi.Authentication.SetSecurityQuestionAndAnswerRequest request) {
            return base.Channel.SetSecurityQuestionAndAnswerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PassiveClientUi.Authentication.GetSecurityQuestionResponse PassiveClientUi.Authentication.IAuthentication.GetSecurityQuestion(PassiveClientUi.Authentication.GetSecurityQuestionRequest request) {
            return base.Channel.GetSecurityQuestion(request);
        }
        
        public string GetSecurityQuestion(string userName, out string error) {
            PassiveClientUi.Authentication.GetSecurityQuestionRequest inValue = new PassiveClientUi.Authentication.GetSecurityQuestionRequest();
            inValue.userName = userName;
            PassiveClientUi.Authentication.GetSecurityQuestionResponse retVal = ((PassiveClientUi.Authentication.IAuthentication)(this)).GetSecurityQuestion(inValue);
            error = retVal.error;
            return retVal.GetSecurityQuestionResult;
        }
        
        public System.Threading.Tasks.Task<PassiveClientUi.Authentication.GetSecurityQuestionResponse> GetSecurityQuestionAsync(PassiveClientUi.Authentication.GetSecurityQuestionRequest request) {
            return base.Channel.GetSecurityQuestionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PassiveClientUi.Authentication.RestorePasswordFromUserNameAndSecurityQuestionResponse PassiveClientUi.Authentication.IAuthentication.RestorePasswordFromUserNameAndSecurityQuestion(PassiveClientUi.Authentication.RestorePasswordFromUserNameAndSecurityQuestionRequest request) {
            return base.Channel.RestorePasswordFromUserNameAndSecurityQuestion(request);
        }
        
        public string RestorePasswordFromUserNameAndSecurityQuestion(string userName, string answer, out string error) {
            PassiveClientUi.Authentication.RestorePasswordFromUserNameAndSecurityQuestionRequest inValue = new PassiveClientUi.Authentication.RestorePasswordFromUserNameAndSecurityQuestionRequest();
            inValue.userName = userName;
            inValue.answer = answer;
            PassiveClientUi.Authentication.RestorePasswordFromUserNameAndSecurityQuestionResponse retVal = ((PassiveClientUi.Authentication.IAuthentication)(this)).RestorePasswordFromUserNameAndSecurityQuestion(inValue);
            error = retVal.error;
            return retVal.RestorePasswordFromUserNameAndSecurityQuestionResult;
        }
        
        public System.Threading.Tasks.Task<PassiveClientUi.Authentication.RestorePasswordFromUserNameAndSecurityQuestionResponse> RestorePasswordFromUserNameAndSecurityQuestionAsync(PassiveClientUi.Authentication.RestorePasswordFromUserNameAndSecurityQuestionRequest request) {
            return base.Channel.RestorePasswordFromUserNameAndSecurityQuestionAsync(request);
        }
    }
}
